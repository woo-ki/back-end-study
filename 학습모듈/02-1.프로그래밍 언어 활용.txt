능력단위: 프로그래밍 언어 활용

1. 언어 번역 과정
    1) 정의 : 작성한 코드 -> 실행
    2) 종류
        (1) 컴파일 : 전체 코드 -> 한 번에 기계어 변환 -> 빌드 -> 실행
		*.c	    *.obj	        		       *.exe
            c, c++ 계열
        (2) 바이트코드 : 전체 코드 -> 운영체제별 바이트 코드 -> 실행
		    *.java           *.class
	Java
        (3) 인터프리터 : 코드 한 줄 -> 실행
	Python

2. Java의 특징
    1) 객체지향언어이다. 모든 사물을 객체로 만들어서 처리한다.
        (1) 클래스: 객체를 만들기위 한 설계도(틀), 붕어빵 만드는 기계
        (2) 객체(인스턴스): 현실 세계에 존재하는 모든 실제 사물(데이터), 붕어빵
    2) 정보은닉
        : 클래스의 공개가 불필요한 정보는 외부에 숨긴다. private
    3) 상속
        (1) 클래스의 기능(메소드)을 확장(extends)하는 것이다.
        (2) 상속을 통해서 다형성을 구현할 수 있다.
    4) 다형성
        : 동일한 코드가 서로 다른 기능을 가진 것을 의미한다.
        move() 메소드 : 개는 달린다. 새는 난다. 물고기는 헤엄친다. 등등

3. 패키지
    1) 기본 패키지: java.lang 기본 클래스들이 보관된 패키지
    2) java.lang 이외의 모든 패키지의 클래스들은 import가 필요하다.
    3) java.util 패키지
        (1) Scanner	java.util.Scanner
        (2) Random	java.util.Random
        (3) Arrays	java.util.Arrays
    4) import 방법
        (1) 개별 import	import java.util.Scanner;
        (2) 전체 import	import java.util.*;
             java.util 패키지의 모든 클래스를 import 하겠다.
    5) 패키지 생성
        (1) 주로 소문자를 이용한다.
        (2) 최소 3수준을 사용한다. (com.samsung.galaxy)
    6) 패키지: 클래스를 보관하는 폴더 개념.	일반화해서 패키지.
    7) 클래스: 특정 패키지에 소속된 파일 개념.	일반화해서 모듈.

4. 클래스
    1) 기본 구성 요소
        (1) 필드: 변수를 의미, 객체가 가질 값
        (2) 생성자: 객체를 만들때만 사용하는 특수한 메소드
        (3) 메소드: 함수를 의미, 객체가 가질 기능
    2) 자바에는 함수가 존재하지 않는다.
        모든 코드는 클래스 내부에 작성해야 하므로.