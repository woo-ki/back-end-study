24_contact 설정

1. 버전 최신화

2. lombok 디펜던시
	<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
	<dependency>
	    <groupId>org.projectlombok</groupId>
	    <artifactId>lombok</artifactId>
	    <version>1.18.12</version>
	    <scope>provided</scope>
	</dependency>
		
3. mvnrepository에서 spring-jdbc 디펜던시 추가
	<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>5.1.4.RELEASE</version>
	</dependency>

4. web.xml에 인코딩을 추가한다.
	<!-- 인코딩 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

5. root-context.xml에 JdbcTemplate template Bean정의
   (Servers에 등록한 context.xml의 설정을 사용하지 않겠다는 의미입니다.)
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="spring" />
		<property name="password" value="1111" />
	</bean>
	<bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
   
6. common 패키지에 JdbcTemplate template을 선언해 둔다.
   (controller, dao에서 공동으로 사용할 수 있도록)
   
7. controller에서 @Autowierd를 이용해서 JdbcTemplate template를 생성한다.
   (생성된 template은 common 패키지에도 등록해 둔다.)